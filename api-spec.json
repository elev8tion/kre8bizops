{"openapi":"3.0.0","info":{"title":"API documentation for 36905_elev8tion_agiled_app","version":"1.0.0","description":"API documentation for 36905_elev8tion_agiled_app"},"servers":[{"url":"https://api.nocodebackend.com"}],"paths":{"/create/contacts":{"post":{"tags":["Endpoints"],"summary":"Create a new record in contacts","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/contacts":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from contacts","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/contacts/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from contacts","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/contacts":{"post":{"tags":["Endpoints"],"summary":"Search for records in contacts","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/contacts/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in contacts","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"company":{"type":"string"},"position":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"notes":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/contacts/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from contacts","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/deals":{"post":{"tags":["Endpoints"],"summary":"Create a new record in deals","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/deals":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from deals","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/deals/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from deals","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/deals":{"post":{"tags":["Endpoints"],"summary":"Search for records in deals","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/deals/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in deals","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"column_1":{"type":"string"},"column_2":{"type":"string"},"column_3":{"type":"string"},"column_4":{"type":"string"},"column_5":{"type":"string"},"column_6":{"type":"string"},"column_7":{"type":"string"},"close_date":{"type":"string"},"description":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/deals/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from deals","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/expenses":{"post":{"tags":["Endpoints"],"summary":"Create a new record in expenses","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/expenses":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from expenses","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/expenses/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from expenses","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/expenses":{"post":{"tags":["Endpoints"],"summary":"Search for records in expenses","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/expenses/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in expenses","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"},"amount":{"type":"number"},"category":{"type":"string"},"date":{"type":"string","format":"date"},"vendor":{"type":"string"},"payment_method":{"type":"string"},"billable":{"type":"integer"},"project":{"type":"string"},"status":{"type":"string"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/expenses/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from expenses","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/invoices":{"post":{"tags":["Endpoints"],"summary":"Create a new record in invoices","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/invoices":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from invoices","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/invoices/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from invoices","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/invoices":{"post":{"tags":["Endpoints"],"summary":"Search for records in invoices","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/invoices/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in invoices","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"invoice_number":{"type":"string"},"client":{"type":"string"},"project":{"type":"string"},"issue_date":{"type":"string","format":"date"},"due_date":{"type":"string","format":"date"},"paid_date":{"type":"string","format":"date"},"status":{"type":"string"},"items":{"type":"string"},"subtotal":{"type":"number"},"tax":{"type":"number"},"total":{"type":"number"},"notes":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/invoices/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from invoices","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/projects":{"post":{"tags":["Endpoints"],"summary":"Create a new record in projects","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/projects":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from projects","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/projects/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from projects","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/projects":{"post":{"tags":["Endpoints"],"summary":"Search for records in projects","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/projects/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in projects","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"client":{"type":"string"},"status":{"type":"string"},"start_date":{"type":"string","format":"date"},"end_date":{"type":"string","format":"date"},"budget":{"type":"number"},"tags":{"type":"string"},"progress":{"type":"integer"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/projects/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from projects","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/settings":{"post":{"tags":["Endpoints"],"summary":"Create a new record in settings","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/settings":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from settings","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/settings/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from settings","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/settings":{"post":{"tags":["Endpoints"],"summary":"Search for records in settings","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/settings/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in settings","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"business_name":{"type":"string"},"business_email":{"type":"string"},"business_phone":{"type":"string"},"business_address":{"type":"string"},"currency":{"type":"string"},"date_format":{"type":"string"},"timezone":{"type":"string"},"tax_rate":{"type":"number"},"invoice_prefix":{"type":"string"},"theme":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/settings/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from settings","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/create/tasks":{"post":{"tags":["Endpoints"],"summary":"Create a new record in tasks","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Successfully created the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"success"},"message":{"type":"string","example":"Record created successfully"},"id":{"type":"integer","description":"ID of the newly created record"}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/tasks":{"get":{"tags":["Endpoints"],"summary":"Retrieve all records from tasks","description":"**Filtering Records**\n\n                You can filter results by query parameters that match field names, with optional operator suffixes for advanced filtering.\n\n                | Operator       | Example                       | Meaning                        |\n                |----------------|------------------------------|-------------------------------|\n                | `field`        | `?status=active`             | Equal (default)               |\n                | `field[ne]`    | `?status[ne]=inactive`       | Not equal                     |\n                | `field[gt]`    | `?price[gt]=100`             | Greater than                  |\n                | `field[gte]`   | `?date[gte]=2024-05-01`      | Greater than or equal         |\n                | `field[lt]`    | `?score[lt]=500`             | Less than                     |\n                | `field[lte]`   | `?score[lte]=800`            | Less than or equal            |\n                | `field[in]`    | `?type[in]=a,b,c`            | In list (comma-separated)     |\n                | `field[like]`  | `?name[like]=john`           | Partial match                 |\n\n                **Examples:**  \n                - `?price[gte]=100&price[lte]=200` (price between 100 and 200)  \n                - `?name[like]=john` (name contains \"john\")  \n                - `?status=active` (status is active)","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"query","name":"page","required":false,"schema":{"type":"integer","default":1},"description":"Page number for pagination."},{"in":"query","name":"limit","required":false,"schema":{"type":"integer","default":10},"description":"Number of records per page."}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/read/tasks/{id}":{"get":{"tags":["Endpoints"],"summary":"Retrieve a record by ID from tasks","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to retrieve"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved the record","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}},"/search/tasks":{"post":{"tags":["Endpoints"],"summary":"Search for records in tasks","parameters":[{"$ref":"#/components/parameters/Instance"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully retrieved matching records","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/update/tasks/{id}":{"put":{"tags":["Endpoints"],"summary":"Update a record in tasks","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to update"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"project":{"type":"string"},"assigned_to":{"type":"string"},"priority":{"type":"string"},"status":{"type":"string"},"due_date":{"type":"string","format":"date"},"completed_date":{"type":"string","format":"date"},"tags":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}}}}},"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully updated the record"},"400":{"description":"Bad Request"},"500":{"description":"Server error"}}}},"/delete/tasks/{id}":{"delete":{"tags":["Endpoints"],"summary":"Delete a record from tasks","parameters":[{"$ref":"#/components/parameters/Instance"},{"in":"path","name":"id","required":true,"schema":{"type":"integer"},"description":"The ID of the record to delete"}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successfully deleted the record"},"400":{"description":"Bad Request"},"404":{"description":"Record Not Found"},"500":{"description":"Server error"}}}}},"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"parameters":{"Instance":{"name":"Instance","in":"query","required":true,"schema":{"type":"string","default":"36905_elev8tion_agiled_app"},"description":"Instance Name"}}},"security":[{"bearerAuth":[]}],"tags":[{"name":"Endpoints","description":"Operations related to the API endpoints"},{"name":"Join Endpoints","description":"Operations related to table joins"}]}